{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\todolist\\\\client\\\\src\\\\pages\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { CredentialsContext } from '..';\nimport { useHistory } from 'react-router';\nimport { handleErrors } from './Login';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [, setCredentials] = useContext(CredentialsContext);\n\n  const register = e => {\n    if (username && password) {\n      e.preventDefault();\n      fetch(`https://todos-backend-prollyarth.herokuapp.com/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      }).then(handleErrors).then(() => {\n        setCredentials({\n          username,\n          password\n        });\n        history.push('/');\n      }).catch(err => {\n        setError(err.message);\n      });\n    } else {\n      setError(\"Username and password should not be empty\");\n    }\n  };\n\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center mt-14\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-6xl\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mt-5\",\n      children: [\"Already have an account? Login \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"underline text-secondary\",\n        children: \"here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 67\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-red-600 mt-5\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control w-5/12\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label-text\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        className: \"input input-info input-bordered\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"label-text\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        className: \"input input-info input-bordered\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: register,\n        className: \"btn my-8 w-20 self-center\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"mp19HcVjSRDUdm0zy9UlkPPPiGY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Data/todolist/client/src/pages/Register.jsx"],"names":["React","useState","useContext","CredentialsContext","useHistory","handleErrors","Link","Register","username","setUsername","password","setPassword","error","setError","setCredentials","register","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","history","push","catch","err","message","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,kBAAT,QAAmC,IAAnC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,SAASC,QAAT,GAAoB;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAGA,QAAM,GAAGa,cAAH,IAAqBZ,UAAU,CAACC,kBAAD,CAArC;;AAEA,QAAMY,QAAQ,GAAIC,CAAD,IAAO;AAEpB,QAAIR,QAAQ,IAAIE,QAAhB,EAA0B;AACtBM,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,KAAK,CAAE,yDAAF,EAA4D;AAC7DC,QAAAA,MAAM,EAAE,MADqD;AAE7DC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAFoD;AAK7DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBf,UAAAA,QADiB;AACPE,UAAAA;AADO,SAAf;AALuD,OAA5D,CAAL,CAQGc,IARH,CAQQnB,YARR,EASCmB,IATD,CASM,MAAM;AACRV,QAAAA,cAAc,CAAC;AACXN,UAAAA,QADW;AAEXE,UAAAA;AAFW,SAAD,CAAd;AAIAe,QAAAA,OAAO,CAACC,IAAR,CAAa,GAAb;AACH,OAfD,EAeGC,KAfH,CAeUC,GAAD,IAAS;AACdf,QAAAA,QAAQ,CAACe,GAAG,CAACC,OAAL,CAAR;AACH,OAjBD;AAkBH,KApBD,MAoBO;AACHhB,MAAAA,QAAQ,CAAC,2CAAD,CAAR;AACH;AACJ,GAzBD;;AA2BA,QAAMY,OAAO,GAAGrB,UAAU,EAA1B;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA,iEAAsD,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAkB,QAAA,SAAS,EAAC,0BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGK;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAA,gBAAqCQ;AAArC;AAAA;AAAA;AAAA;AAAA,YAHL,eAII;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,8BACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,SAAS,EAAC,iCAApD;AAAsF,QAAA,QAAQ,EAAGI,CAAD,IAAOP,WAAW,CAACO,CAAC,CAACc,MAAF,CAASC,KAAV;AAAlH;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,UAAnC;AAA8C,QAAA,SAAS,EAAC,iCAAxD;AAA0F,QAAA,QAAQ,EAAGf,CAAD,IAAOL,WAAW,CAACK,CAAC,CAACc,MAAF,CAASC,KAAV;AAAtH;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAQ,QAAA,OAAO,EAAEhB,QAAjB;AAA0B,QAAA,SAAS,EAAC,2BAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAxDQR,Q;UAoCWH,U;;;KApCXG,Q;AA0DT,eAAeA,QAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { CredentialsContext } from '..';\r\nimport { useHistory } from 'react-router';\r\nimport { handleErrors } from './Login';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Register() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n\r\n    const [, setCredentials] = useContext(CredentialsContext)\r\n\r\n    const register = (e) => {\r\n\r\n        if (username && password) {\r\n            e.preventDefault()\r\n            fetch(`https://todos-backend-prollyarth.herokuapp.com/register`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    username, password\r\n                })\r\n            }).then(handleErrors)\r\n            .then(() => {\r\n                setCredentials({\r\n                    username,\r\n                    password\r\n                })\r\n                history.push('/')\r\n            }).catch((err) => {\r\n                setError(err.message)\r\n            })\r\n        } else {\r\n            setError(\"Username and password should not be empty\")\r\n        }\r\n    };\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center mt-14\">\r\n            <h1 className=\"text-6xl\">Register</h1>\r\n            <span className=\"mt-5\">Already have an account? Login <Link to=\"/login\" className=\"underline text-secondary\">here</Link></span>\r\n            {<span className=\"text-red-600 mt-5\">{error}</span>}\r\n            <div className=\"form-control w-5/12\">\r\n                <label className=\"label\">\r\n                    <span className=\"label-text\">Username</span>\r\n                </label> \r\n                <input type=\"text\" placeholder=\"username\" className=\"input input-info input-bordered\" onChange={(e) => setUsername(e.target.value)}/> \r\n                <label className=\"label\">\r\n                    <span className=\"label-text\">Password</span>\r\n                </label> \r\n                <input type=\"password\" placeholder=\"password\" className=\"input input-info input-bordered\" onChange={(e) => setPassword(e.target.value)}/>\r\n                <button onClick={register}className=\"btn my-8 w-20 self-center\">Register</button>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}