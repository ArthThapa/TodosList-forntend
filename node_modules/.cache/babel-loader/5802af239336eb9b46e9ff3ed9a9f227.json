{"ast":null,"code":"var _jsxFileName = \"D:\\\\Data\\\\todolist\\\\client\\\\src\\\\components\\\\Todos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport { handleErrors } from '../pages/Login';\nimport { CredentialsContext } from '..';\nimport { MdRemoveCircleOutline } from \"react-icons/md\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todos() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [todoText, setTodoText] = useState(\"\");\n  const [credentials] = useContext(CredentialsContext);\n  useEffect(() => {\n    fetch(`https://todos-backend-prollyarth.herokuapp.com/todos`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Basic ${credentials.username}:${credentials.password}`\n      }\n    }).then(res => res.json()).then(todos => setTodos(todos));\n  }, []);\n\n  const addTodo = e => {\n    e.preventDefault();\n    if (!todoText) return;\n    const newTodo = {\n      checked: false,\n      text: todoText\n    };\n    setTodos([...todos, newTodo]);\n    setTodoText(\"\");\n    fetch(`https://todos-backend-prollyarth.herokuapp.com/todos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Basic ${credentials.username}:${credentials.password}`\n      },\n      body: JSON.stringify({\n        todos\n      })\n    }).then(handleErrors).then(() => {});\n  };\n\n  const deleteTodo = index => {\n    const newTodoList = [...todos];\n    newTodoList.splice(index, 1);\n    setTodos(newTodoList);\n  };\n\n  useEffect(() => {\n    fetch(`https://todos-backend-prollyarth.herokuapp.com/todos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Basic ${credentials.username}:${credentials.password}`\n      },\n      body: JSON.stringify({\n        todos\n      })\n    }).then(handleErrors).then(() => {});\n  }, [todos]);\n\n  const toggleTodo = index => {\n    const newTodoList = [...todos];\n    newTodoList[index].checked = !newTodoList[index].checked;\n    setTodos(newTodoList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"p-6 card bordered shadow-lg mt-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"cursor-pointer label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            checked: todo.checked,\n            className: \"toggle\",\n            onChange: () => toggleTodo(index),\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), todo.checked && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"line-through\",\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 46\n          }, this), !todo.checked && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 114\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteTodo(index),\n            children: /*#__PURE__*/_jsxDEV(MdRemoveCircleOutline, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 71\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addTodo,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: todoText,\n        onChange: e => setTodoText(e.target.value),\n        type: \"text\",\n        placeholder: \"Enter item here\",\n        className: \"input input-bordered\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-outline btn-accent mt-5\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todos, \"Yf/J/iGeUw+NrptscvdI7gLB5fw=\");\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["D:/Data/todolist/client/src/components/Todos.jsx"],"names":["React","useState","useContext","useEffect","handleErrors","CredentialsContext","MdRemoveCircleOutline","Todos","todos","setTodos","todoText","setTodoText","credentials","fetch","method","headers","username","password","then","res","json","addTodo","e","preventDefault","newTodo","checked","text","body","JSON","stringify","deleteTodo","index","newTodoList","splice","toggleTodo","map","todo","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { handleErrors } from '../pages/Login';\r\nimport { CredentialsContext } from '..';\r\n\r\nimport { MdRemoveCircleOutline } from \"react-icons/md\"\r\n\r\n\r\nfunction Todos() {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [todoText, setTodoText] = useState(\"\");\r\n    const [credentials] = useContext(CredentialsContext)\r\n\r\n    useEffect(() => {\r\n        fetch(`https://todos-backend-prollyarth.herokuapp.com/todos`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Basic ${credentials.username}:${credentials.password}`\r\n            }\r\n        }).then((res) => res.json())\r\n        .then(todos => setTodos(todos))\r\n    }, [])\r\n\r\n    const addTodo = (e) => {\r\n        e.preventDefault();\r\n        if (!todoText) return;\r\n\r\n        const newTodo = {checked: false, text: todoText}\r\n        setTodos([...todos, newTodo]);\r\n        setTodoText(\"\");\r\n        fetch(`https://todos-backend-prollyarth.herokuapp.com/todos`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Basic ${credentials.username}:${credentials.password}`\r\n            },\r\n            body: JSON.stringify({\r\n                todos\r\n            })\r\n        }).then(handleErrors)\r\n        .then(() => {});\r\n    }\r\n\r\n    const deleteTodo = (index) => {\r\n\r\n        const newTodoList = [...todos];\r\n        newTodoList.splice(index, 1);\r\n        setTodos(newTodoList)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`https://todos-backend-prollyarth.herokuapp.com/todos`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Basic ${credentials.username}:${credentials.password}`\r\n            },\r\n            body: JSON.stringify({\r\n                todos\r\n            })\r\n        }).then(handleErrors)\r\n        .then(() => {});\r\n    }, [todos])\r\n\r\n    const toggleTodo = (index) => {\r\n        const newTodoList = [...todos];\r\n        newTodoList[index].checked = !newTodoList[index].checked;\r\n        setTodos(newTodoList)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div class=\"p-6 card bordered shadow-lg mt-12\">\r\n                <div className=\"form-control\">\r\n                    {todos.map((todo, index) => (\r\n                        <label className=\"cursor-pointer label\">\r\n                            <input checked={todo.checked} className=\"toggle\" onChange={() => toggleTodo(index)} type=\"checkbox\"/>\r\n                            {todo.checked && <span className=\"line-through\">{todo.text}</span>}{!todo.checked && <label>{todo.text}</label>}\r\n                            <button onClick={() => deleteTodo(index)}><MdRemoveCircleOutline /></button>\r\n                        </label>\r\n                    ))}\r\n                    <br />\r\n                </div>\r\n            </div>\r\n            <form onSubmit={addTodo}>\r\n            <input value={todoText} onChange={(e) => setTodoText(e.target.value) } type=\"text\" placeholder=\"Enter item here\" className=\"input input-bordered\" />\r\n            <button type=\"submit\" className=\"btn btn-outline btn-accent mt-5\">Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n"]},"metadata":{},"sourceType":"module"}